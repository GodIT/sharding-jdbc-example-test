spring.shardingsphere.datasource.names=ds_0,ds_1

spring.shardingsphere.datasource.ds_0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds_0.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds_0.jdbc-url=jdbc:mysql://localhost:3306/demo_ds_0?serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.ds_0.username=root
spring.shardingsphere.datasource.ds_0.password=root
spring.shardingsphere.datasource.ds_0.max-active=16

spring.shardingsphere.datasource.ds_1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.ds_1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.ds_1.jdbc-url=jdbc:mysql://localhost:3306/demo_ds_1?serverTimezone=UTC&useSSL=false
spring.shardingsphere.datasource.ds_1.username=root
spring.shardingsphere.datasource.ds_1.password=root
spring.shardingsphere.datasource.ds_1.max-active=16

spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=user_id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds_$->{user_id % 2}
#spring.shardingsphere.sharding.binding-tables[0]=t_order,t_order_item

#spring.shardingsphere.sharding.binding-tables[1]=t_item,t_item_detail

#字典类型表，每个库对应的表都会产生记录
spring.shardingsphere.sharding.broadcast-tables=t_address
spring.shardingsphere.sharding.default-data-source-name=ds_0

spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=ds_$->{0..1}.t_order_$->{0..1}
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order.key-generator.column=order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.props.worker.id=123

spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=ds_$->{0..1}.t_order_item_$->{0..1}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 2}
spring.shardingsphere.sharding.tables.t_order_item.key-generator.column=order_item_id
spring.shardingsphere.sharding.tables.t_order_item.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order_item.key-generator.props.worker.id=123


#单独指定某种关联表的分库方式
spring.shardingsphere.sharding.tables.t_item.database-strategy.inline.sharding-column=item_id
spring.shardingsphere.sharding.tables.t_item.database-strategy.inline.algorithm-expression=ds_$->{item_id % 2}

spring.shardingsphere.sharding.tables.t_item.actual-data-nodes=ds_$->{0..1}.t_item_$->{0..1}
spring.shardingsphere.sharding.tables.t_item.table-strategy.inline.sharding-column=item_id
spring.shardingsphere.sharding.tables.t_item.table-strategy.inline.algorithm-expression=t_item_$->{item_id % 2}
spring.shardingsphere.sharding.tables.t_item.key-generator.column=item_id
spring.shardingsphere.sharding.tables.t_item.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_item.key-generator.props.worker.id=123

spring.shardingsphere.sharding.tables.t_item_detail.database-strategy.inline.sharding-column=item_id
spring.shardingsphere.sharding.tables.t_item_detail.database-strategy.inline.algorithm-expression=ds_$->{item_id % 2}

spring.shardingsphere.sharding.tables.t_item_detail.actual-data-nodes=ds_$->{0..1}.t_item_detail_$->{0..1}
spring.shardingsphere.sharding.tables.t_item_detail.table-strategy.inline.sharding-column=item_id
spring.shardingsphere.sharding.tables.t_item_detail.table-strategy.inline.algorithm-expression=t_item_detail_$->{item_id % 2}
spring.shardingsphere.sharding.tables.t_item_detail.key-generator.column=item_detail_id
spring.shardingsphere.sharding.tables.t_item_detail.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.t_item_detail.key-generator.props.worker.id=123